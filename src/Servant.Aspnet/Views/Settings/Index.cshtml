@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{
    Layout = "Shared/_Layout.cshtml";
    ViewBag.ActiveMenuItem = "settings";
}
<h1>Settings</h1>

<div class="box50">
    <h3>General</h3> 
    <form action="/settings/" method="POST">
        <div class="input-group">
            <label for="servanturl">Servant URL</label>
            <input type="text" class="input-medium span4" id="servanturl" name="servanturl" value="@Model.Settings.ServantUrl" />
            <p>Example: <code>servant.io</code> or <code>servant.io:440</code>. Default port is 80.
                <br/><span class="gray"><code>localhost</code> and <code>*</code> is both handled as a wildcard binding. Hostnames cannot include <code>localhost</code>.</span>
            </p>
        </div>

        <div class="input-group">
            <label for="debug">Debug mode</label>
            <label class="checkbox" style="text-align: left;">
                <input type="checkbox" name="debug" id="debug" value="true" @(Model.Settings.Debug == true ? Html.Raw("checked=\"checked\"") : null) />
                Enabled
            </label>
        </div>

        <div class="input-group">
            <label for="username">Username</label>  
            <input type="text" class="input-medium span4" id="username" name="username" value="@Model.Settings.Username" />
        </div>
            
        <div class="input-group">
            <label for="password">Password</label>
            <input type="password" class="input-medium span4" id="password" name="password" value="" />
            <p class="gray">Only enter a password if you want to change the current.</p>
        </div>
    
        <div class="margin-top30">
            <input type="submit" value="Save settings" />
        </div>
    </form>
</div>

<div class="box50">
    <h3>Error monitoring</h3>
        
    <p class="margin-top10">Error monitoring checks your IIS for new application errors every 5 minutes. 
        Error monitoring is currently <strong>@Html.Raw((bool)Model.Settings.ParseLogs ? "activated" : "deactived")</strong>.</p>
        
    @if((bool)Model.Settings.ParseLogs)
    {
        <form method="POST" action="/settings/startlogparsing/">
            <input type="hidden" value="false" name="start"/>
            <input type="submit" class="cancel" value="Deactivate"/>      
        </form>
    } else
    {
        <form method="POST" action="/settings/startlogparsing/">
            <input type="hidden" value="true" name="start"/>
            <input type="submit" value="Activate"/>
        </form>
    }
</div>


@section javascript {
    <script type="text/javascript">
        var originalServantUrl = "@Model.OriginalServantUrl";
        var repost = false;
    </script>
    <script src="/scripts/serveraddresschanger.js"></script>
}